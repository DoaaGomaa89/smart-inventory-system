services:
  db:
    image: mysql:8.0
    container_name: inv_db
    environment:
      MYSQL_DATABASE: inventory
      MYSQL_ROOT_PASSWORD: password
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    ports:
      - "3310:3306"
    volumes:
      - db_data:/var/lib/mysql
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -ppassword || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 20

  backend:
    build:
      context: .
      dockerfile: Dockerfile.spring-subdir
    container_name: inv_backend
    environment:
      # ---- DB connection for Spring ----
      SPRING_DATASOURCE_URL: jdbc:mysql://db:3306/inventory?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: password

      # ---- JPA (optional but handy locally) ----
      SPRING_JPA_HIBERNATE_DDL_AUTO: update

      # ---- JWT (mapped to properties below) ----
      JWT_SECRET: qF!9d7hT&2xC$YzA3pM@vWlK#rJ*eSgU
      JWT_EXPIRATION: "3600000"

      # ---- CORS (if you use it in a CORS bean) ----
      # ALLOWED_ORIGINS: http://localhost:4200

      # ---- Profile (use if you have application-prod.properties) ----
      # SPRING_PROFILES_ACTIVE: prod
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8080:8080"

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: inv_frontend
    depends_on:
      - backend
    ports:
      - "4200:80"

volumes:
  db_data:
